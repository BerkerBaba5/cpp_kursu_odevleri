Aşağıda ismi Date olan bir sınıfın tanımlandığı başlık dosyası yer almaktadır. Bu ödevde Date sınıfının kodlarını yazmanız isteniyor.
Date sınıfı türünden bir nesnenin değeri bir tarihtir. Örnek: 15 Şubat 1998
Aşağıdaki açıklamalar kodda verilen yorum satırlarına ilişkindir:

1) Sınıfın hizmet verdiği en küçük yıl değeri
2) random_date işlevinin üreteceği tarih için en küçük yıl değeri
3) random_date işlevinin üreteceği tarih için en büyük yıl değeri
4) Haftanın günü için enum class türü
5) Varsayılan kurucu işlev: Date nesnesini 01-01-1900 tarihi ile oluşturacak
6) Date nesnesini gün, ay, yıl değeri ile oluşturacak kurucu işlev
7) Date nesnesini formatlanmış  yazından alacağı tarih değeri ile oluşturacak. Format: gg/aa/yil
8) Date nesnesini "calender time" değerinden dönüştüreceği tarih değeri ile oluşturacak
9) Ayın gününü döndürüyor



#include <iosfwd>
#include <ctime>

class Date {
public:
	static constexpr int year_base = 1900;  //1
	static constexpr int random_min_year = 1940;  //2
	static constexpr int random_max_year = 2020;  //3
	enum class WeekDay {Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday}; //4
	Date(); //5 
	Date(int d, int m, int y);  //6
	Date(const char *p);  //7
	Date(std::time_t timer); //8
	int get_month_day()const; //9
	int get_month()const;
	int get_year()const;
	int get_year_day()const;
	int get_week_day()const;

	Date& set_day(int day);
	Date &set_month(int month);
	Date &set_year(int year);

	Date operator-(int day)const;
	Date &operator+=(int day);
	Date &operator-=(int day);
	Date &operator++();
	Date &operator++(int);
	Date &operator--();
	Date &operator--(int);

	static Date random_date();
	static constexpr bool isleap(int y);
};

bool operator<(const Date &, const Date &);
bool operator<=(const Date &, const Date &);
bool operator>(const Date &, const Date &);
bool operator>=(const Date &, const Date &);
bool operator==(const Date &, const Date &);
bool operator!=(const Date &, const Date &);

int operator-(const Date &d1, const Date &d2);
Date operator+(const Date &date, int n);
Date operator+(int, const Date &);
Date::WeekDay& operator++(Date::WeekDay &r);
Date::WeekDay& operator++(Date::WeekDay &r, int);
Date::WeekDay& operator--(Date::WeekDay &r);
Date::WeekDay& operator--(Date::WeekDay &r, int);
std::ostream &operator<<(std::ostream &os, const Date &date);
std::istream &operator>>(std::istream &is, Date &date);





